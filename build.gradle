plugins {
    id 'java-library'
    id 'idea'
    id 'java'
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.7.1'
}

repositories {
    jcenter()
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'jacoco'
    version = '1.0'

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // java编译的时候缺省状态下会因为中文字符而失败
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    //定义版本号

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }

    jar {
        manifest {
            attributes("Implementation-Title": "Gradle")
        }
    }

    configurations {
        // 所有需要忽略的包定义在此

    }

    dependencies {

        implementation(
                'org.apache.commons:commons-lang3:3.8.1',
                "org.projectlombok:lombok:1.18.4",
                'io.reactivex.rxjava2:rxjava:2.2.12'
        )
        annotationProcessor(
                "org.projectlombok:lombok:1.18.4"
        )
        testCompile(
                'org.assertj:assertj-core:3.11.1',
                'junit:junit:4.12',
                'org.mockito:mockito-core:2.+',
                'org.powermock:powermock-module-junit4:2.0.2',
                'org.powermock:powermock-api-mockito2:2.0.2'
        )

    }

    //  jacoco

    test {
        finalizedBy jacocoTestReport
        finalizedBy jacocoTestCoverageVerification
    }


    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled true
            csv.enabled false
        }
        afterEvaluate {
            classDirectories = files(classDirectories.files.collect {
                fileTree(
                        dir: it,
                        exclude: [
                                '**/domain/*.class',
                                '**/utils/*.class'
                        ]
                )
            })
        }
    }

    jacocoTestCoverageVerification {
        violationRules {
//            rule {
//                limit {
//                    minimum = 0.8
//                }
//            }
            rule {
                enabled = true
                element = 'PACKAGE'
                includes = ['com.*']
                excludes = [
                        '**.refactors.*',
                        '**.domain.*',
                        '**.utils.*'
                ]
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.8
                }
                limit {
                    counter = 'BRANCH'
                    value = 'COVEREDRATIO'
                    minimum = 0.8
                }
                limit {
                    counter = 'METHOD'
                    value = 'COVEREDRATIO'
                    minimum = 0.8
                }
                limit {
                    counter = 'CLASS'
                    value = 'COVEREDRATIO'
                    minimum = 0.8
                }
            }
        }
        dependsOn(jacocoTestReport)
    }

    check.dependsOn jacocoTestCoverageVerification

    coveralls {
        jacocoReportPath 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
    }


    // 显示当前项目下所有用于 compile 的 jar.
//    task listJars(description: 'Display all compile jars.') << {
//        configurations.compile.each { File file -> println file.name }
//    }
}
